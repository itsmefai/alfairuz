Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.

By: Muhammad Al-Fairuz
Date: 25 April 2020


Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

	SELECT COUNT(DISTINCT(key))
	FROM table

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No, there are no NULL values in the Users table. The SQL query below was intended to capture the total number of null values (if any) present in each column and presenting it neatly in the output table.


	
	SQL code used to arrive at answer:
	SELECT 
	(SELECT COUNT(*) FROM user WHERE id IS NULL) AS id,
	(SELECT COUNT(*) FROM user WHERE name IS NULL) AS name,
	(SELECT COUNT(*) FROM user WHERE review_count IS NULL) AS review_count,
	(SELECT COUNT(*) FROM user WHERE yelping_since IS NULL) AS yelping_since,
	(SELECT COUNT(*) FROM user WHERE useful IS NULL) AS useful,
	(SELECT COUNT(*) FROM user WHERE funny IS NULL) AS funny,
	(SELECT COUNT(*) FROM user WHERE cool IS NULL) AS cool,
	(SELECT COUNT(*) FROM user WHERE fans IS NULL) AS fans,
	(SELECT COUNT(*) FROM user WHERE average_stars IS NULL) AS average_stars,
	(SELECT COUNT(*) FROM user WHERE compliment_hot IS NULL) AS compliment_hot,
	(SELECT COUNT(*) FROM user WHERE compliment_more IS NULL) AS compliment_more,
	(SELECT COUNT(*) FROM user WHERE compliment_profile IS NULL) AS compliment_profile,
	(SELECT COUNT(*) FROM user WHERE compliment_cute IS NULL) AS compliment_cute,
	(SELECT COUNT(*) FROM user WHERE compliment_list IS NULL) AS compliment_list,
	(SELECT COUNT(*) FROM user WHERE compliment_note IS NULL) AS compliment_note,
	(SELECT COUNT(*) FROM user WHERE compliment_plain IS NULL) AS compliment_plain,
	(SELECT COUNT(*) FROM user WHERE compliment_cool IS NULL) AS compliment_cool,
	(SELECT COUNT(*) FROM user WHERE compliment_funny IS NULL) AS compliment_funny,
	(SELECT COUNT(*) FROM user WHERE compliment_writer IS NULL) AS compliment_writer,
	(SELECT COUNT(*) FROM user WHERE compliment_photos IS NULL) AS compliment_photo
	FROM user
	GROUP BY id;
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

	SELECT city, 
	SUM(review_count) AS Total
	FROM business
	INNER JOIN review ON review.business_id = business.id
	GROUP BY city
	ORDER BY Total DESC;

	
	Copy and Paste the Result Below:

	+-----------------+--------+
	| city            |  Total |
	+-----------------+--------+
	| Las Vegas       | 103871 |
	| Phoenix         |  11380 |
	| Scottsdale      |  10403 |
	| Gilbert         |   9813 |
	| Toronto         |   7151 |
	| Henderson       |   6652 |
	| Montréal        |   5670 |
	| Tempe           |   4360 |
	| Chandler        |   3549 |
	| Charlotte       |   2808 |
	| Madison         |   2721 |
	| Pittsburgh      |   2466 |
	| Cleveland       |   2371 |
	| Mesa            |   1559 |
	| Mississauga     |   1462 |
	| Lakewood        |   1220 |
	| North Las Vegas |   1004 |
	| Glendale        |    565 |
	| Cave Creek      |    537 |
	| Champaign       |    528 |
	| Surprise        |    338 |
	| North York      |    327 |
	| Markham         |    296 |
	| Avondale        |    294 |
	| Monroeville     |    264 |
	+-----------------+--------+

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

	SQL code used to arrive at answer:

	SELECT
	DISTINCT(stars) AS star_rating, 
	COUNT(stars) AS frequency
	FROM business
	GROUP BY star_rating, city
	HAVING city = 'Avon';


	Copy and Paste the Resulting Table Below (2 columns – star rating and count):

	+-------------+-----------+
	| star_rating | frequency |
	+-------------+-----------+
	|         1.5 |         1 |
	|         2.5 |         2 |
	|         3.5 |         3 |
	|         4.0 |         2 |
	|         4.5 |         1 |
	|         5.0 |         1 |
	+-------------+-----------+


ii. Beachwood

	SQL code used to arrive at answer:

	SELECT
	DISTINCT(stars) AS star_rating, 
	COUNT(stars) AS frequency
	FROM business
	GROUP BY star_rating, city
	HAVING city = 'Beachwood';


	Copy and Paste the Resulting Table Below (2 columns – star rating and count):
			
	+-------------+-----------+
	| star_rating | frequency |
	+-------------+-----------+
	|         2.0 |         1 |
	|         2.5 |         1 |
	|         3.0 |         2 |
	|         3.5 |         2 |
	|         4.0 |         1 |
	|         4.5 |         2 |
	|         5.0 |         5 |
	+-------------+-----------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	SELECT id, 
	name, 
	review_count 
	FROM user
	ORDER BY review_count DESC
	LIMIT 3;
		
	Copy and Paste the Result Below:

	+------------------------+--------+--------------+
	| id                     | name   | review_count |
	+------------------------+--------+--------------+
	| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
	| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
	| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
	+------------------------+--------+--------------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

	When comparing Top 3 users with the most number reviews against the Top 3 users with the most number of fans, it does not seem to show any correlation between these two variables.

	The user with the most number of reviews, with 2000 review count, only managed to obtain 253 fans whereas the user with the most number of fans has only 609 review count but with a whopping 503 fans. This observation is seen in many other users with high review count but have low number of fans. A prominent example would be the user by the name of "Eric" who wrote 1116 reviews but only have 16 fans to his name.

	This led to the believe that quantity may not always be better than quality and there are other factors that may contribute to the number of fans. 
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	+------------+------------+
	| love_count | hate_count |
	+------------+------------+
	|       1780 |        232 |
	+------------+------------+

	From the result of my query, there seem to be more review with the word "love" then there are reviews with the word "hate" in them.

	
	SQL code used to arrive at answer:

	SELECT 
	(SELECT COUNT(*) FROM review WHERE text LIKE '%love%') AS love_count,
	(SELECT COUNT(*) FROM review WHERE text LIKE '%hate%') AS hate_count
	FROM review
	GROUP BY love_count;

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

	SELECT 
	name, 
	review_count,
	fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10;
	
	
	Copy and Paste the Result Below:

	+-----------+--------------+------+
	| name      | review_count | fans |
	+-----------+--------------+------+
	| Amy       |          609 |  503 |
	| Mimi      |          968 |  497 |
	| Harald    |         1153 |  311 |
	| Gerald    |         2000 |  253 |
	| Christine |          930 |  173 |
	| Lisa      |          813 |  159 |
	| Cat       |          377 |  133 |
	| William   |         1215 |  126 |
	| Fran      |          862 |  124 |
	| Lissa     |          834 |  120 |
	+-----------+--------------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code. (Torronto & category = Restaurants)
	
i. Do the two groups you chose to analyze have a different distribution of hours?

	I have chosen to analyse the restaurant business that are located in the city of Toronto.

	Based on my pleminary findings, t was found that restaurants with ratings between 4-5 stars have a shorter operating hours than restaurants with 2-3 star ratings. Please note that as the table result can only display a limited number of rows, you will have to switch the "ORDER BY" statement to "ASC" in order to view data for operating hours of 2-3 star rated restaurants.


ii. Do the two groups you chose to analyze have a different number of reviews?
	
	There are more reviews given to restaraunts with 4-5 star ratings than that of restaraunts with 2-3 star ratings. The fact that there are not many reviews for 2-3 stars rated restaraunts suggest that the restaraunts are not well known and in order to make an accurate assessment on it's credibility, a larger sample size or reivews is required.
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	
	Better assumptions can be made when we are able to visualise the geographical coordinates, Longtitude and Langtitude, and identify if there are any correlations between ratings, number of reviews and location.

SQL code used for analysis:

	SELECT city, category, name, stars, review_count, hours FROM business
	INNER JOIN category ON category.business_id = business.id
	INNER JOIN hours ON hours.business_id = business.id
	WHERE city = 'Toronto' AND category = 'Restaurants'
	ORDER BY stars ASC;

	+---------+-------------+------------------+-------+--------------+-----------------------+
	| city    | category    | name             | stars | review_count | hours                 |
	+---------+-------------+------------------+-------+--------------+-----------------------+
	| Toronto | Restaurants | 99 Cent Sushi    |   2.0 |            5 | Monday|11:00-23:00    |
	| Toronto | Restaurants | 99 Cent Sushi    |   2.0 |            5 | Tuesday|11:00-23:00   |
	| Toronto | Restaurants | 99 Cent Sushi    |   2.0 |            5 | Friday|11:00-23:00    |
	| Toronto | Restaurants | 99 Cent Sushi    |   2.0 |            5 | Wednesday|11:00-23:00 |
	| Toronto | Restaurants | 99 Cent Sushi    |   2.0 |            5 | Thursday|11:00-23:00  |
	| Toronto | Restaurants | 99 Cent Sushi    |   2.0 |            5 | Sunday|11:00-23:00    |
	| Toronto | Restaurants | 99 Cent Sushi    |   2.0 |            5 | Saturday|11:00-23:00  |
	| Toronto | Restaurants | Big Smoke Burger |   3.0 |           47 | Monday|10:30-21:00    |
	| Toronto | Restaurants | Big Smoke Burger |   3.0 |           47 | Tuesday|10:30-21:00   |
	| Toronto | Restaurants | Big Smoke Burger |   3.0 |           47 | Friday|10:30-21:00    |
	| Toronto | Restaurants | Big Smoke Burger |   3.0 |           47 | Wednesday|10:30-21:00 |
	| Toronto | Restaurants | Big Smoke Burger |   3.0 |           47 | Thursday|10:30-21:00  |
	| Toronto | Restaurants | Big Smoke Burger |   3.0 |           47 | Sunday|11:00-19:00    |
	| Toronto | Restaurants | Big Smoke Burger |   3.0 |           47 | Saturday|10:30-21:00  |
	| Toronto | Restaurants | Pizzaiolo        |   3.0 |           34 | Monday|9:00-23:00     |
	| Toronto | Restaurants | Pizzaiolo        |   3.0 |           34 | Tuesday|9:00-23:00    |
	| Toronto | Restaurants | Pizzaiolo        |   3.0 |           34 | Friday|9:00-4:00      |
	| Toronto | Restaurants | Pizzaiolo        |   3.0 |           34 | Wednesday|9:00-23:00  |
	| Toronto | Restaurants | Pizzaiolo        |   3.0 |           34 | Thursday|9:00-23:00   |
	| Toronto | Restaurants | Pizzaiolo        |   3.0 |           34 | Sunday|10:00-23:00    |
	| Toronto | Restaurants | Pizzaiolo        |   3.0 |           34 | Saturday|10:00-4:00   |
	| Toronto | Restaurants | Edulis           |   4.0 |           89 | Sunday|12:00-16:00    |
	| Toronto | Restaurants | Edulis           |   4.0 |           89 | Friday|18:00-23:00    |
	| Toronto | Restaurants | Edulis           |   4.0 |           89 | Wednesday|18:00-23:00 |
	| Toronto | Restaurants | Edulis           |   4.0 |           89 | Thursday|18:00-23:00  |
	+---------+-------------+------------------+-------+--------------+-----------------------+
	(Output limit exceeded, 25 of 40 total rows shown)

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
	
	There are more reviews on average for businesses that are still open compared to the ones that are closed.

	Open: 	31.7570754717 
	Closed:	23.1980263158
         
         
ii. Difference 2:

	The average star rating is for business that are still open is slightly higher than businesses that are closed.

	Open:	3.67900943396
	Closed:	3.52039473684
         
         
SQL code used for analysis:
	
	SELECT is_open, 
	AVG(review_count) AS avg_review_count,
	AVG(stars) AS avg_star_rating,
		CASE
		WHEN is_open = 0 THEN 'CLOSED'
		WHEN is_open = 1 THEN 'OPEN'
		END open_status
	FROM business 
	GROUP BY is_open;

	+---------+------------------+-----------------+-------------+
	| is_open | avg_review_count | avg_star_rating | open_status |
	+---------+------------------+-----------------+-------------+
	|       0 |    23.1980263158 |   3.52039473684 | CLOSED      |
	|       1 |    31.7570754717 |   3.67900943396 | OPEN        |
	+---------+------------------+-----------------+-------------+


	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

	Predicting the likelyhood of a business, percentage wise, remaining open.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
	
	There are several factors that can help to predict the likelyhood of a business remaining open. First off we will require data that tells us about the business operating style/activity, for example, the type of business and operating hours. The next important data points would be the information that tells us more about the environment and location the business is in. Using the location data, we can then make inferences as to whether the area in which the business is in, affects the probability of a business in staying open or not. Last but certainly not least, I will need the "is_open" status column which will be the dependent variable for the regression model.

	To summarise, here are the data points that I will need for my analysis:
		1)	Business Id
		2)	Business Category(s)
		3)	Business Name
		4)	Business Operating Hours
		5)	City
		6)	State
		7)	Longitude
		8)	Latitude
		9)	Stars
		10)	Review Count
		11) is_open

                  
iii. Output of your finished dataset: (The following table is set to LIMIT 5 as the some of the rows for categories are too long, making the table not easily readable. For a better view of the data, please use the SQL query in the next question to view the full dataset.)

	+------------------------+----------------------+------------------------------------------------------------------+--------------+---------------+-----------------+----------------+--------------+----------------+--------------+-------------+-------+-----------+----------+-------+--------------+---------+
	| id                     | name                 | categories                                                       | monday_hours | tuesday_hours | wednesday_hours | thursday_hours | friday_hours | saturday_hours | sunday_hours | city        | state | longitude | latitude | stars | review_count | is_open |
	+------------------------+----------------------+------------------------------------------------------------------+--------------+---------------+-----------------+----------------+--------------+----------------+--------------+-------------+-------+-----------+----------+-------+--------------+---------+
	| -0DET7VdEQOJVJ_v6klEug | Flaming Kitchen      | Asian Fusion,Restaurants                                         | 12:00-23:00  | 12:00-23:00   | 12:00-23:00     | 12:00-23:00    | 12:00-23:00  | 12:00-23:00    | 12:00-23:00  | Markham     | ON    |  -79.3487 |  43.8484 |   3.0 |           25 |       1 |
	| -2HjuT4yjLZ3b5f_abD87Q | Freeman's Car Stereo | Electronics,Shopping,Automotive,Car Stereo Installation          | 9:00-19:00   | 9:00-19:00    | 9:00-19:00      | 9:00-19:00     | 9:00-19:00   | 9:00-17:00     | None         | Charlotte   | NC    |  -80.8755 |  35.1727 |   3.5 |            8 |       1 |
	| -CdstAUdEvci8GeJG8owpQ | Motors & More        | Home Services,Solar Installation,Heating & Air Conditioning/HVAC | 7:00-17:00   | 7:00-17:00    | 7:00-17:00      | 7:00-17:00     | 7:00-17:00   | 8:00-12:00     | None         | Las Vegas   | NV    |  -115.167 |  36.1465 |   5.0 |            7 |       1 |
	| -K4gAv8_vjx8-2BxkVeRkA | Baby Cakes           | Bakeries,Food                                                    | None         | 11:00-17:00   | 11:00-17:00     | 11:00-20:00    | 11:00-17:00  | 10:00-17:00    | None         | Willoughby  | OH    |  -81.4064 |  41.6399 |   3.5 |            5 |       1 |
	| -PtTGvWsckUL8tTutHr6Ew | Snip-its Rocky River | Beauty & Spas,Hair Salons                                        | 10:00-19:00  | 10:00-19:00   | 10:00-19:00     | 10:00-19:00    | 10:00-19:00  | 9:00-17:30     | 10:00-16:00  | Rocky River | OH    |  -81.8587 |  41.4595 |   2.5 |           18 |       1 |
	+------------------------+----------------------+------------------------------------------------------------------+--------------+---------------+-----------------+----------------+--------------+----------------+--------------+-------------+-------+-----------+----------+-------+--------------+---------+

         
         
iv. Provide the SQL code you used to create your final dataset:

	SELECT business.id,
	business.name,
	GROUP_CONCAT(DISTINCT(category)) as categories,
	MAX(CASE
	   WHEN hours LIKE "%monday%" THEN TRIM(hours,'%MondayTuesWednesThursFriSatSun|%') 
	   END) AS monday_hours,
	   MAX(CASE
	   WHEN hours LIKE "%tuesday%" THEN TRIM(hours,'%MondayTuesWednesThursFriSatSun|%') 
	   END) AS tuesday_hours,
	   MAX(CASE
	   WHEN hours LIKE "%wednesday%" THEN TRIM(hours,'%MondayTuesWednesThursFriSatSun|%') 
	   END) AS wednesday_hours,
	   MAX(CASE
	   WHEN hours LIKE "%thursday%" THEN TRIM(hours,'%MondayTuesWednesThursFriSatSun|%') 
	   END) AS thursday_hours,
	   MAX(CASE
	   WHEN hours LIKE "%friday%" THEN TRIM(hours,'%MondayTuesWednesThursFriSatSun|%') 
	   END) AS friday_hours,
	   MAX(CASE
	   WHEN hours LIKE "%saturday%" THEN TRIM(hours,'%MondayTuesWednesThursFriSatSun|%') 
	   END) AS saturday_hours,
	   MAX(CASE
	   WHEN hours LIKE "%sunday%" THEN TRIM(hours,'%MondayTuesWednesThursFriSatSun|%') 
	   END) AS sunday_hours,
	city,
	state,
	longitude,
	latitude,
	business.stars,
	review_count,
	is_open
	FROM business
	INNER JOIN category ON category.business_id = business.id
	INNER JOIN attribute ON attribute.business_id = business.id
	INNER JOIN hours ON hours.business_id = business.id
	GROUP BY business.id;